<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="hanriver">
        <context:exclude-filter type="regex" expression="hanriver.controller.*"/>
    </context:component-scan>
	<!-- 트랜잭션 관련 애노테이션을 처리할 객체들을 등록한다. -->
	<tx:annotation-driven transaction-manager="txManager"/>
	
	<!-- 에노티에션이 아닌 AOP를 이용하여 트랜잭션을 관리할 수 있다. -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
	  <tx:attributes>
	    <!-- get으로 시작하는 애들은 업데이트하지말아라 -->
	    <tx:method name="get*" read-only="true"/>
	    <!-- list로 시작하는 애들은 업데이트하지말아라 -->
	    <tx:method name="list*" read-only="true"/>
	    <!-- 그밖에 모든 애들은 업데이트 가능하게 -->
	    <tx:method name="*"/>
	  </tx:attributes>
	</tx:advice>
	
	
	<aop:config>
	  <!-- 트랜잭션을 적용할 대상의 규칙을 선언 -->
	  <aop:pointcut id="fooServiceOperation" expression="execution(* hanriver.service.*.*(..))"/>
	  <!-- 대상에 대해 어떤 트랜잭션을 적용할 지 설정한다. -->
	  <aop:advisor advice-ref="txAdvice" pointcut-ref="fooServiceOperation"/>
	</aop:config>
	
	
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	  <property name="dataSource" ref="dataSource" />
	  <property name="mapperLocations" value="classpath*:hanriver/sql/**/*.xml" />
	  <property name="typeAliasesPackage" value="hanriver.domain"/>
    </bean>
    
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
      <property name="driverClassName" value="${jdbc.driver}"/>
      <property name="url" value="${jdbc.url}"/>
      <property name="username" value="${jdbc.username}" />
      <property name="password" value="${jdbc.password}" />
    </bean>
    
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      <property name="basePackage" value="hanriver.dao"/>
    </bean>
    
    <context:property-placeholder location="classpath:hanriver/config/jdbc.properties"/>
    
</beans>